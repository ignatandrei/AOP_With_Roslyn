//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using System.Collections.Generic;
namespace {{NamespaceName}} {

    struct PropertyHelper{
        public bool CanRead;
        public bool CanWrite;
        public string Name;
        public string Type;
        public object Value;
    }
    /// <summary>
    /// Generates code from  {{ClassName}}
    /// </summary>
  [GeneratedCode("AOPMethods", "{{version}}")]
  [CompilerGenerated]
  partial class {{ClassName}}{ 
   /*
    public int id(){
    System.Diagnostics.Debugger.Break();
    return 1;
    }
    */
    private IDictionary<string,PropertyHelper> MyProperties(){
        var data=new Dictionary<string,PropertyHelper>();
        PropertyHelper ph;
{{~ for p in Properties ~}}
        ph=new PropertyHelper();
        ph.Name = "{{p.Name}}";
        ph.Type = "{{p.ReturnType}}";
        ph.CanRead = !{{p.IsWriteOnly}};
        ph.CanWrite = !{{p.IsReadOnly}};
        {{ if !p.IsWriteOnly }} 
        ph.Value = this.{{p.Name}};
        {{ end}}
        data.Add("{{p.Name}}", ph);
        //{{p.Name}} {{p.ReturnType}}     
{{ end }}
        return data;
    
    }
    private void WriteMyProperties(IDictionary<string,object> values){
{{~ for p in Properties ~}}
    {{ if !p.IsReadOnly }} //{{!p.IsWriteOnly}} {{!p.IsReadOnly}}
        if(values.ContainsKey("{{p.Name}}"))
        this.{{p.Name}} = ({{p.ReturnType}})(values["{{p.Name}}"]);    
    {{ end }}
{{ end }}
        
    
    }
    
  }
}              